// Code generated by xgen. DO NOT EDIT.

package iof_v3

// IOFVersion ...
type IOFVersion struct {
	VersionAttr string `xml:"version,attr,omitempty"`
}

// PersonList ...
type PersonList struct {
	IOFVersion string   `xml:"IOFVersion"`
	Person     []string `xml:"Person"`
}

// Person ...
type Person struct {
	SexAttr     string       `xml:"sex,attr,omitempty"`
	PersonName  *PersonName  `xml:"PersonName"`
	PersonId    string       `xml:"PersonId"`
	BirthDate   *BirthDate   `xml:"BirthDate"`
	Address     []*Address   `xml:"Address"`
	Tele        []*Tele      `xml:"Tele"`
	Nationality *Nationality `xml:"Nationality"`
	Person      string       `xml:"Person"`
}

// PersonName ...
type PersonName struct {
	Family string   `xml:"Family"`
	Given  []*Given `xml:"Given"`
}

// Family ...
type Family string

// Given ...
type Given struct {
	SequenceAttr interface{} `xml:"sequence,attr,omitempty"`
}

// PersonId ...
type PersonId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// BirthDate ...
type BirthDate struct {
	Date *Date `xml:"Date"`
}

// Nationality ...
type Nationality struct {
	CountryId string   `xml:"CountryId"`
	Country   *Country `xml:"Country"`
}

// Contact ...
type Contact struct {
	PersonId    string      `xml:"PersonId"`
	Person      string      `xml:"Person"`
	ContactType string      `xml:"ContactType"`
	ModifyDate  *ModifyDate `xml:"ModifyDate"`
}

// ContactType ...
type ContactType struct {
	ValueAttr string `xml:"value,attr,omitempty"`
}

// CompetitorList ...
type CompetitorList struct {
	IOFVersion string        `xml:"IOFVersion"`
	Competitor []*Competitor `xml:"Competitor"`
}

// Competitor ...
type Competitor struct {
	PersonId         string              `xml:"PersonId"`
	Person           string              `xml:"Person"`
	ClubId           string              `xml:"ClubId"`
	Club             *Club               `xml:"Club"`
	Country          *Country            `xml:"Country"`
	CountryId        string              `xml:"CountryId"`
	PreSelectedClass []*PreSelectedClass `xml:"PreSelectedClass"`
	CCard            []*CCard            `xml:"CCard"`
	Rank             []*Rank             `xml:"Rank"`
	ModifyDate       *ModifyDate         `xml:"ModifyDate"`
}

// Rank ...
type Rank struct {
	Name           string         `xml:"Name"`
	OrganisationId string         `xml:"OrganisationId"`
	Organisation   *Organisation  `xml:"Organisation"`
	RankPosition   string         `xml:"RankPosition"`
	RankValue      string         `xml:"RankValue"`
	ValidFromDate  *ValidFromDate `xml:"ValidFromDate"`
	ValidToDate    *ValidToDate   `xml:"ValidToDate"`
	ModifyDate     *ModifyDate    `xml:"ModifyDate"`
}

// RankPosition ...
type RankPosition string

// RankValue ...
type RankValue string

// ValidFromDate ...
type ValidFromDate struct {
	Date *Date `xml:"Date"`
}

// ValidToDate ...
type ValidToDate struct {
	Date *Date `xml:"Date"`
}

// CCard ...
type CCard struct {
	MiscDataAttr     interface{} `xml:"miscData,attr,omitempty"`
	CCardId          string      `xml:"CCardId"`
	PunchingUnitType string      `xml:"PunchingUnitType"`
	ModifyDate       *ModifyDate `xml:"ModifyDate"`
}

// CCardId ...
type CCardId string

// RankList ...
type RankList struct {
	IOFVersion     string        `xml:"IOFVersion"`
	Name           string        `xml:"Name"`
	OrganisationId string        `xml:"OrganisationId"`
	Organisation   *Organisation `xml:"Organisation"`
	Competitor     []*Competitor `xml:"Competitor"`
}

// ClubList ...
type ClubList struct {
	IOFVersion string  `xml:"IOFVersion"`
	Club       []*Club `xml:"Club"`
}

// Club ...
type Club struct {
	ClubId         string      `xml:"ClubId"`
	Name           string      `xml:"Name"`
	ShortName      *ShortName  `xml:"ShortName"`
	OrganisationId string      `xml:"OrganisationId"`
	CountryId      string      `xml:"CountryId"`
	Country        *Country    `xml:"Country"`
	Address        []*Address  `xml:"Address"`
	Tele           []*Tele     `xml:"Tele"`
	WebURL         []string    `xml:"WebURL"`
	Account        []string    `xml:"Account"`
	Contact        []*Contact  `xml:"Contact"`
	ModifyDate     *ModifyDate `xml:"ModifyDate"`
}

// ClubId ...
type ClubId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// EventList ...
type EventList struct {
	IOFVersion          string                 `xml:"IOFVersion"`
	EventClassification []*EventClassification `xml:"EventClassification"`
	Event               []string               `xml:"Event"`
}

// Event ...
type Event struct {
	EventFormAttr         string               `xml:"eventForm,attr,omitempty"`
	EventId               string               `xml:"EventId"`
	Name                  string               `xml:"Name"`
	EventClassificationId string               `xml:"EventClassificationId"`
	EventClassification   *EventClassification `xml:"EventClassification"`
	StartDate             *StartDate           `xml:"StartDate"`
	FinishDate            *FinishDate          `xml:"FinishDate"`
	EventOfficial         []*EventOfficial     `xml:"EventOfficial"`
	Organiser             *Organiser           `xml:"Organiser"`
	EventClass            []*EventClass        `xml:"EventClass"`
	EventRace             []*EventRace         `xml:"EventRace"`
	WebURL                []string             `xml:"WebURL"`
	EntryData             *EntryData           `xml:"EntryData"`
	Service               []*Service           `xml:"Service"`
	Account               []string             `xml:"Account"`
	Event                 string               `xml:"Event"`
}

// EventId ...
type EventId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// StartDate ...
type StartDate struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// FinishDate ...
type FinishDate struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// Organiser ...
type Organiser struct {
	ClubId []string `xml:"ClubId"`
	Club   []*Club  `xml:"Club"`
}

// EventOfficial ...
type EventOfficial struct {
	EventOfficialRole string `xml:"EventOfficialRole"`
	PersonId          string `xml:"PersonId"`
	Person            string `xml:"Person"`
}

// EventOfficialRole ...
type EventOfficialRole string

// EntryData ...
type EntryData struct {
	Address *Address `xml:"Address"`
	Tele    *Tele    `xml:"Tele"`
}

// EventClass ...
type EventClass struct {
	ClassId           string             `xml:"ClassId"`
	Class             string             `xml:"Class"`
	EventRaceId       string             `xml:"EventRaceId"`
	ClassRaceInfo     string             `xml:"ClassRaceInfo"`
	PunchingUnitType  string             `xml:"PunchingUnitType"`
	TransferedToClass *TransferedToClass `xml:"TransferedToClass"`
	DividedIntoClass  *DividedIntoClass  `xml:"DividedIntoClass"`
	ModifyDate        *ModifyDate        `xml:"ModifyDate"`
}

// TransferedToClass ...
type TransferedToClass struct {
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
}

// DividedIntoClass ...
type DividedIntoClass struct {
	EventClass []*EventClass `xml:"EventClass"`
}

// EntryClass ...
type EntryClass struct {
	SequenceAttr   interface{}     `xml:"sequence,attr,omitempty"`
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	EventClass     *EventClass     `xml:"EventClass"`
}

// EventClassification ...
type EventClassification struct {
	EventClassificationId string      `xml:"EventClassificationId"`
	Name                  string      `xml:"Name"`
	ModifyDate            *ModifyDate `xml:"ModifyDate"`
}

// EventClassificationId ...
type EventClassificationId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// EventRace ...
type EventRace struct {
	EventRaceId string      `xml:"EventRaceId"`
	Name        string      `xml:"Name"`
	RaceDate    *RaceDate   `xml:"RaceDate"`
	ModifyDate  *ModifyDate `xml:"ModifyDate"`
}

// EventRaceId ...
type EventRaceId string

// RaceDate ...
type RaceDate struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// EntryFee ...
type EntryFee struct {
	TaxIncludedAttr string  `xml:"taxIncluded,attr,omitempty"`
	EntryFeeId      string  `xml:"EntryFeeId"`
	Name            string  `xml:"Name"`
	Amount          *Amount `xml:"Amount"`
	EntryFee        string  `xml:"EntryFee"`
}

// EntryFeeId ...
type EntryFeeId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// Amount ...
type Amount struct {
	CurrencyAttr interface{} `xml:"currency,attr,omitempty"`
}

// EntryList ...
type EntryList struct {
	IOFVersion string       `xml:"IOFVersion"`
	ClubEntry  []*ClubEntry `xml:"ClubEntry"`
}

// ClubEntry ...
type ClubEntry struct {
	ClubId  string   `xml:"ClubId"`
	Club    *Club    `xml:"Club"`
	Contact *Contact `xml:"Contact"`
	Entry   []string `xml:"Entry"`
}

// Entry ...
type Entry struct {
	NonCompetitorAttr string             `xml:"nonCompetitor,attr,omitempty"`
	EntryId           string             `xml:"EntryId"`
	PersonId          string             `xml:"PersonId"`
	Person            string             `xml:"Person"`
	CCard             []*CCard           `xml:"CCard"`
	Rank              []*Rank            `xml:"Rank"`
	TeamName          string             `xml:"TeamName"`
	ClubId            string             `xml:"ClubId"`
	Club              *Club              `xml:"Club"`
	TeamSequence      string             `xml:"TeamSequence"`
	EntryClass        []*EntryClass      `xml:"EntryClass"`
	AllocationControl *AllocationControl `xml:"AllocationControl"`
	EntryDate         *EntryDate         `xml:"EntryDate"`
	Entry             string             `xml:"Entry"`
}

// EntryId ...
type EntryId string

// TeamName ...
type TeamName string

// TeamSequence ...
type TeamSequence string

// EntryDate ...
type EntryDate struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// AllocationControl ...
type AllocationControl struct {
	ClubId                string `xml:"ClubId"`
	Club                  *Club  `xml:"Club"`
	PersonId              string `xml:"PersonId"`
	Person                string `xml:"Person"`
	AllocationControlType string `xml:"AllocationControlType"`
}

// AllocationControlType ...
type AllocationControlType struct {
	ValueAttr string `xml:"value,attr,omitempty"`
}

// StartList ...
type StartList struct {
	IOFVersion string        `xml:"IOFVersion"`
	EventId    string        `xml:"EventId"`
	Event      string        `xml:"Event"`
	ClassStart []*ClassStart `xml:"ClassStart"`
	ModifyDate *ModifyDate   `xml:"ModifyDate"`
}

// ClassStart ...
type ClassStart struct {
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	EventClass     *EventClass     `xml:"EventClass"`
	PersonStart    []*PersonStart  `xml:"PersonStart"`
	TeamStart      []*TeamStart    `xml:"TeamStart"`
}

// PersonStart ...
type PersonStart struct {
	PersonId  string       `xml:"PersonId"`
	Person    string       `xml:"Person"`
	ClubId    string       `xml:"ClubId"`
	Club      *Club        `xml:"Club"`
	CountryId string       `xml:"CountryId"`
	Country   *Country     `xml:"Country"`
	Rank      []*Rank      `xml:"Rank"`
	Start     *Start       `xml:"Start"`
	RaceStart []*RaceStart `xml:"RaceStart"`
}

// TeamStart ...
type TeamStart struct {
	TeamName    string         `xml:"TeamName"`
	CountryId   string         `xml:"CountryId"`
	Country     *Country       `xml:"Country"`
	PersonStart []*PersonStart `xml:"PersonStart"`
}

// Start ...
type Start struct {
	StartNumber  string      `xml:"StartNumber"`
	BibNumber    string      `xml:"BibNumber"`
	CCardId      string      `xml:"CCardId"`
	CCard        *CCard      `xml:"CCard"`
	StartTime    *StartTime  `xml:"StartTime"`
	TeamSequence string      `xml:"TeamSequence"`
	CourseLength string      `xml:"CourseLength"`
	StartId      string      `xml:"StartId"`
	ModifyDate   *ModifyDate `xml:"ModifyDate"`
}

// RaceStart ...
type RaceStart struct {
	EventRaceId string     `xml:"EventRaceId"`
	EventRace   *EventRace `xml:"EventRace"`
	Start       *Start     `xml:"Start"`
}

// StartNumber ...
type StartNumber string

// BibNumber ...
type BibNumber string

// ResultList ...
type ResultList struct {
	StatusAttr  string         `xml:"status,attr,omitempty"`
	IOFVersion  string         `xml:"IOFVersion"`
	EventId     string         `xml:"EventId"`
	Event       string         `xml:"Event"`
	ClassResult []*ClassResult `xml:"ClassResult"`
	ResultList  string         `xml:"ResultList"`
}

// ClassResult ...
type ClassResult struct {
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	EventClass     *EventClass     `xml:"EventClass"`
	PersonResult   []*PersonResult `xml:"PersonResult"`
	TeamResult     []*TeamResult   `xml:"TeamResult"`
}

// PersonResult ...
type PersonResult struct {
	PersonId   string        `xml:"PersonId"`
	Person     string        `xml:"Person"`
	ClubId     string        `xml:"ClubId"`
	Club       *Club         `xml:"Club"`
	CountryId  string        `xml:"CountryId"`
	Country    *Country      `xml:"Country"`
	Rank       []*Rank       `xml:"Rank"`
	Result     *Result       `xml:"Result"`
	RaceResult []*RaceResult `xml:"RaceResult"`
}

// TeamResult ...
type TeamResult struct {
	TeamName       string          `xml:"TeamName"`
	CountryId      string          `xml:"CountryId"`
	Country        *Country        `xml:"Country"`
	StartNumber    string          `xml:"StartNumber"`
	BibNumber      string          `xml:"BibNumber"`
	StartTime      *StartTime      `xml:"StartTime"`
	FinishTime     *FinishTime     `xml:"FinishTime"`
	Time           *Time           `xml:"Time"`
	ResultPosition string          `xml:"ResultPosition"`
	TeamStatus     string          `xml:"TeamStatus"`
	Rank           []*Rank         `xml:"Rank"`
	Point          []*Point        `xml:"Point"`
	PersonResult   []*PersonResult `xml:"PersonResult"`
}

// Result ...
type Result struct {
	StartNumber       string           `xml:"StartNumber"`
	BibNumber         string           `xml:"BibNumber"`
	CCardId           string           `xml:"CCardId"`
	CCard             *CCard           `xml:"CCard"`
	StartTime         *StartTime       `xml:"StartTime"`
	FinishTime        *FinishTime      `xml:"FinishTime"`
	Time              *Time            `xml:"Time"`
	ResultPosition    string           `xml:"ResultPosition"`
	CompetitorStatus  string           `xml:"CompetitorStatus"`
	TeamSequence      string           `xml:"TeamSequence"`
	CourseVariationId string           `xml:"CourseVariationId"`
	CourseVariation   *CourseVariation `xml:"CourseVariation"`
	CourseLength      string           `xml:"CourseLength"`
	SplitTime         []*SplitTime     `xml:"SplitTime"`
	BadgeValueId      string           `xml:"BadgeValueId"`
	BadgeValue        *BadgeValue      `xml:"BadgeValue"`
	Point             []*Point         `xml:"Point"`
	ModifyDate        *ModifyDate      `xml:"ModifyDate"`
}

// RaceResult ...
type RaceResult struct {
	EventRaceId string     `xml:"EventRaceId"`
	EventRace   *EventRace `xml:"EventRace"`
	Result      *Result    `xml:"Result"`
}

// CompetitorStatus ...
type CompetitorStatus struct {
	ValueAttr string `xml:"value,attr"`
}

// TeamStatus ...
type TeamStatus struct {
	ValueAttr string `xml:"value,attr"`
}

// Point ...
type Point struct {
	TypeAttr  interface{} `xml:"type,attr"`
	ValueAttr interface{} `xml:"value,attr"`
}

// ResultPosition ...
type ResultPosition string

// SplitTime ...
type SplitTime struct {
	SequenceAttr interface{} `xml:"sequence,attr"`
	ControlCode  string      `xml:"ControlCode"`
	Control      *Control    `xml:"Control"`
	Time         *Time       `xml:"Time"`
}

// BadgeList ...
type BadgeList struct {
	IOFVersion string        `xml:"IOFVersion"`
	BadgeValue []*BadgeValue `xml:"BadgeValue"`
	BadgeLimit []*BadgeLimit `xml:"BadgeLimit"`
}

// BadgeValue ...
type BadgeValue struct {
	BadgeValueId string      `xml:"BadgeValueId"`
	Name         string      `xml:"Name"`
	ShortName    *ShortName  `xml:"ShortName"`
	ModifyDate   *ModifyDate `xml:"ModifyDate"`
}

// BadgeValueId ...
type BadgeValueId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// BadgeLimit ...
type BadgeLimit struct {
	BadgeValueId          string               `xml:"BadgeValueId"`
	BadgeValue            *BadgeValue          `xml:"BadgeValue"`
	EventClassificationId string               `xml:"EventClassificationId"`
	EventClassification   *EventClassification `xml:"EventClassification"`
	ClassTypeId           string               `xml:"ClassTypeId"`
	ClassType             *ClassType           `xml:"ClassType"`
	TimeFactor            string               `xml:"TimeFactor"`
	ModifyDate            *ModifyDate          `xml:"ModifyDate"`
}

// TimeFactor ...
type TimeFactor string

// ResultSelection ...
type ResultSelection struct {
	OrganisationId []string          `xml:"OrganisationId"`
	Organisation   []*Organisation   `xml:"Organisation"`
	ClubId         []string          `xml:"ClubId"`
	Club           []*Club           `xml:"Club"`
	ClassId        []string          `xml:"ClassId"`
	ClassShortName []*ClassShortName `xml:"ClassShortName"`
	Class          []string          `xml:"Class"`
	Position       string            `xml:"Position"`
	ModifyDate     *ModifyDate       `xml:"ModifyDate"`
}

// Position ...
type Position string

// ClassData ...
type ClassData struct {
	IOFVersion string       `xml:"IOFVersion"`
	ClassType  []*ClassType `xml:"ClassType"`
	Class      []string     `xml:"Class"`
}

// ClassType ...
type ClassType struct {
	ClassTypeId string      `xml:"ClassTypeId"`
	Name        string      `xml:"Name"`
	ModifyDate  *ModifyDate `xml:"ModifyDate"`
}

// ClassTypeId ...
type ClassTypeId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// Class ...
type Class struct {
	LowAgeAttr                  interface{}                  `xml:"lowAge,attr,omitempty"`
	HighAgeAttr                 interface{}                  `xml:"highAge,attr,omitempty"`
	SexAttr                     string                       `xml:"sex,attr"`
	NumberInTeamAttr            interface{}                  `xml:"numberInTeam,attr,omitempty"`
	TeamEntryAttr               string                       `xml:"teamEntry,attr,omitempty"`
	MaxNumberInClassAttr        interface{}                  `xml:"maxNumberInClass,attr,omitempty"`
	ActualForRankingAttr        string                       `xml:"actualForRanking,attr,omitempty"`
	TimePresentationAttr        string                       `xml:"timePresentation,attr,omitempty"`
	AllowedMinAgeAttr           interface{}                  `xml:"allowedMinAge,attr,omitempty"`
	AllowedMaxAgeAttr           interface{}                  `xml:"allowedMaxAge,attr,omitempty"`
	ClassId                     string                       `xml:"ClassId"`
	Name                        string                       `xml:"Name"`
	ClassShortName              *ClassShortName              `xml:"ClassShortName"`
	ClassTypeId                 string                       `xml:"ClassTypeId"`
	ClassType                   *ClassType                   `xml:"ClassType"`
	SubstituteClass             *SubstituteClass             `xml:"SubstituteClass"`
	NotQualifiedSubstituteClass *NotQualifiedSubstituteClass `xml:"NotQualifiedSubstituteClass"`
	EntryFeeId                  []string                     `xml:"EntryFeeId"`
	EntryFee                    []string                     `xml:"EntryFee"`
	Class                       string                       `xml:"Class"`
}

// ClassId ...
type ClassId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// ClassShortName ...
type ClassShortName struct {
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// SubstituteClass ...
type SubstituteClass struct {
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	Class          string          `xml:"Class"`
}

// NotQualifiedSubstituteClass ...
type NotQualifiedSubstituteClass struct {
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	Class          string          `xml:"Class"`
}

// PreSelectedClass ...
type PreSelectedClass struct {
	SequenceAttr   interface{}     `xml:"sequence,attr,omitempty"`
	ClassId        string          `xml:"ClassId"`
	ClassShortName *ClassShortName `xml:"ClassShortName"`
	Class          string          `xml:"Class"`
}

// ClassRaceInfo ...
type ClassRaceInfo struct {
	NumberOfVacantsAttr    interface{}             `xml:"numberOfVacants,attr,omitempty"`
	RankingRaceAttr        string                  `xml:"rankingRace,attr,omitempty"`
	NumberOfPrizesAttr     interface{}             `xml:"numberOfPrizes,attr,omitempty"`
	BibNumberPrefixAttr    interface{}             `xml:"bibNumberPrefix,attr,omitempty"`
	BibNumberBaseAttr      interface{}             `xml:"bibNumberBase,attr,omitempty"`
	FinishChuteAttr        interface{}             `xml:"finishChute,attr,omitempty"`
	FirstStart             *FirstStart             `xml:"FirstStart"`
	StartInterval          *StartInterval          `xml:"StartInterval"`
	EstimatedBestTime      *EstimatedBestTime      `xml:"EstimatedBestTime"`
	EstimatedLastPrizeTime *EstimatedLastPrizeTime `xml:"EstimatedLastPrizeTime"`
	PrizeCeremonyTime      *PrizeCeremonyTime      `xml:"PrizeCeremonyTime"`
	AllocationMethod       string                  `xml:"AllocationMethod"`
	StartMethod            string                  `xml:"StartMethod"`
	ClassRaceStatus        string                  `xml:"ClassRaceStatus"`
	CourseVariationId      []string                `xml:"CourseVariationId"`
	ClassRaceInfo          string                  `xml:"ClassRaceInfo"`
}

// AllocationMethod ...
type AllocationMethod struct {
	ValueAttr string `xml:"value,attr,omitempty"`
}

// StartMethod ...
type StartMethod struct {
	ValueAttr string `xml:"value,attr"`
}

// ClassRaceStatus ...
type ClassRaceStatus struct {
	ValueAttr string `xml:"value,attr"`
}

// FirstStart ...
type FirstStart struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// StartInterval ...
type StartInterval struct {
	Time *Time `xml:"Time"`
}

// EstimatedBestTime ...
type EstimatedBestTime struct {
	Time *Time `xml:"Time"`
}

// EstimatedLastPrizeTime ...
type EstimatedLastPrizeTime struct {
	Time *Time `xml:"Time"`
}

// PrizeCeremonyTime ...
type PrizeCeremonyTime struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// CourseData ...
type CourseData struct {
	IOFVersion  string         `xml:"IOFVersion"`
	Map         *Map           `xml:"Map"`
	StartPoint  []*StartPoint  `xml:"StartPoint"`
	Control     []*Control     `xml:"Control"`
	FinishPoint []*FinishPoint `xml:"FinishPoint"`
	Course      []*Course      `xml:"Course"`
}

// Control ...
type Control struct {
	ControlCode      string          `xml:"ControlCode"`
	Description      *Description    `xml:"Description"`
	ControlPosition  string          `xml:"ControlPosition"`
	PunchingUnit     []*PunchingUnit `xml:"PunchingUnit"`
	PunchPattern     []string        `xml:"PunchPattern"`
	PunchingUnitType string          `xml:"PunchingUnitType"`
	MapPosition      string          `xml:"MapPosition"`
	Comment          []*Comment      `xml:"Comment"`
	ModifyDate       *ModifyDate     `xml:"ModifyDate"`
}

// Description ...
type Description struct {
	Box        []string    `xml:"Box"`
	ModifyDate *ModifyDate `xml:"ModifyDate"`
}

// Box ...
type Box struct {
	ColumnAttr      string    `xml:"column,attr"`
	HasDiagonalAttr string    `xml:"hasDiagonal,attr,omitempty"`
	Symbol          []*Symbol `xml:"Symbol"`
	Box             string    `xml:"Box"`
}

// Symbol ...
type Symbol struct {
	SymbolId string `xml:"SymbolId"`
	Name     string `xml:"Name"`
}

// SymbolId ...
type SymbolId string

// Text ...
type Text struct {
	LanguageIdAttr interface{} `xml:"languageId,attr,omitempty"`
}

// ControlCode ...
type ControlCode string

// ControlPosition ...
type ControlPosition struct {
	XAttr    interface{} `xml:"x,attr"`
	YAttr    interface{} `xml:"y,attr"`
	UnitAttr string      `xml:"unit,attr,omitempty"`
}

// Map ...
type Map struct {
	Scale       string `xml:"Scale"`
	MapPosition string `xml:"MapPosition"`
}

// Scale ...
type Scale string

// MapPosition ...
type MapPosition struct {
	XAttr    interface{} `xml:"x,attr"`
	YAttr    interface{} `xml:"y,attr"`
	UnitAttr string      `xml:"unit,attr,omitempty"`
}

// StartPoint ...
type StartPoint struct {
	StartPointCode    string       `xml:"StartPointCode"`
	Description       *Description `xml:"Description"`
	ControlPosition   string       `xml:"ControlPosition"`
	MapPosition       string       `xml:"MapPosition"`
	Comment           *Comment     `xml:"Comment"`
	DistanceFromStart string       `xml:"DistanceFromStart"`
	ModifyDate        *ModifyDate  `xml:"ModifyDate"`
}

// StartPointCode ...
type StartPointCode string

// DistanceFromStart ...
type DistanceFromStart struct {
	UnitAttr string `xml:"unit,attr,omitempty"`
}

// Info ...
type Info string

// FinishPoint ...
type FinishPoint struct {
	FinishPointCode  string          `xml:"FinishPointCode"`
	Description      *Description    `xml:"Description"`
	ControlPosition  string          `xml:"ControlPosition"`
	PunchingUnit     []*PunchingUnit `xml:"PunchingUnit"`
	PunchPattern     []string        `xml:"PunchPattern"`
	PunchingUnitType string          `xml:"PunchingUnitType"`
	MapPosition      string          `xml:"MapPosition"`
	Comment          *Comment        `xml:"Comment"`
	ModifyDate       *ModifyDate     `xml:"ModifyDate"`
}

// FinishPointCode ...
type FinishPointCode string

// Course ...
type Course struct {
	CourseName        string             `xml:"CourseName"`
	CourseId          string             `xml:"CourseId"`
	EventId           string             `xml:"EventId"`
	EventRaceId       string             `xml:"EventRaceId"`
	ClassId           []string           `xml:"ClassId"`
	ClassShortName    []*ClassShortName  `xml:"ClassShortName"`
	CourseVariation   []*CourseVariation `xml:"CourseVariation"`
	CourseSectionList *CourseSectionList `xml:"CourseSectionList"`
}

// CourseName ...
type CourseName string

// CourseId ...
type CourseId string

// CourseVariation ...
type CourseVariation struct {
	NumberOfRunnersAttr interface{}  `xml:"numberOfRunners,attr,omitempty"`
	CourseVariationId   string       `xml:"CourseVariationId"`
	Name                string       `xml:"Name"`
	CourseLength        string       `xml:"CourseLength"`
	CourseClimb         string       `xml:"CourseClimb"`
	StartPointCode      string       `xml:"StartPointCode"`
	StartPoint          *StartPoint  `xml:"StartPoint"`
	FinishChute         string       `xml:"FinishChute"`
	CourseControl       []string     `xml:"CourseControl"`
	FinishPointCode     string       `xml:"FinishPointCode"`
	FinishPoint         *FinishPoint `xml:"FinishPoint"`
	DistanceToFinish    string       `xml:"DistanceToFinish"`
	ModifyDate          *ModifyDate  `xml:"ModifyDate"`
}

// CourseVariationId ...
type CourseVariationId string

// CourseLength ...
type CourseLength struct {
	UnitAttr string `xml:"unit,attr,omitempty"`
}

// CourseClimb ...
type CourseClimb struct {
	UnitAttr string `xml:"unit,attr,omitempty"`
}

// StartId ...
type StartId string

// FinishChute ...
type FinishChute string

// FinishId ...
type FinishId string

// DistanceToFinish ...
type DistanceToFinish struct {
	FromControlAttr interface{} `xml:"FromControl,attr,omitempty"`
	UnitAttr        string      `xml:"unit,attr,omitempty"`
}

// CourseSectionList ...
type CourseSectionList struct {
	StartPointCode   string           `xml:"StartPointCode"`
	CourseSection    []*CourseSection `xml:"CourseSection"`
	FinishPointCode  string           `xml:"FinishPointCode"`
	DistanceToFinish []string         `xml:"DistanceToFinish"`
}

// CourseSection ...
type CourseSection struct {
	CourseSectionId string          `xml:"CourseSectionId"`
	CourseBranch    []*CourseBranch `xml:"CourseBranch"`
}

// CourseSectionId ...
type CourseSectionId string

// CourseBranch ...
type CourseBranch struct {
	CourseBranchId string   `xml:"CourseBranchId"`
	CourseControl  []string `xml:"CourseControl"`
}

// CourseBranchId ...
type CourseBranchId string

// CourseControl ...
type CourseControl struct {
	MarkedRouteAttr string     `xml:"markedRoute,attr,omitempty"`
	Sequence        string     `xml:"Sequence"`
	ControlCode     string     `xml:"ControlCode"`
	Control         *Control   `xml:"Control"`
	Comment         []*Comment `xml:"Comment"`
	LegLength       []string   `xml:"LegLength"`
	CourseControl   string     `xml:"CourseControl"`
}

// LegLength ...
type LegLength struct {
	FromControlAttr interface{} `xml:"FromControl,attr,omitempty"`
	UnitAttr        string      `xml:"unit,attr,omitempty"`
}

// Sequence ...
type Sequence string

// MapTextPosition ...
type MapTextPosition struct {
	MapPosition string `xml:"MapPosition"`
}

// PunchingUnit ...
type PunchingUnit struct {
	UnitCode         string      `xml:"UnitCode"`
	PunchingUnitType string      `xml:"PunchingUnitType"`
	ModifyDate       *ModifyDate `xml:"ModifyDate"`
}

// UnitCode ...
type UnitCode string

// PunchingUnitType ...
type PunchingUnitType struct {
	ValueAttr string `xml:"value,attr"`
}

// PunchPattern ...
type PunchPattern string

// Name ...
type Name struct {
	LanguageIdAttr interface{} `xml:"languageId,attr,omitempty"`
}

// ShortName ...
type ShortName struct {
	LanguageIdAttr interface{} `xml:"languageId,attr,omitempty"`
}

// Comment ...
type Comment struct {
	LanguageIdAttr interface{} `xml:"languageId,attr,omitempty"`
}

// Organisation ...
type Organisation struct {
	OrganisationId     string             `xml:"OrganisationId"`
	Name               string             `xml:"Name"`
	ShortName          *ShortName         `xml:"ShortName"`
	OrganisationTypeId string             `xml:"OrganisationTypeId"`
	OrganisationType   *OrganisationType  `xml:"OrganisationType"`
	CountryId          string             `xml:"CountryId"`
	Country            *Country           `xml:"Country"`
	Address            []*Address         `xml:"Address"`
	Tele               []*Tele            `xml:"Tele"`
	Account            []string           `xml:"Account"`
	Contact            []*Contact         `xml:"Contact"`
	SubOrganisation    []*SubOrganisation `xml:"SubOrganisation"`
	ModifyDate         *ModifyDate        `xml:"ModifyDate"`
}

// OrganisationId ...
type OrganisationId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// SubOrganisationType ...
type SubOrganisationType struct {
	OrganisationTypeId string            `xml:"OrganisationTypeId"`
	OrganisationType   *OrganisationType `xml:"OrganisationType"`
}

// SubOrganisation ...
type SubOrganisation struct {
	OrganisationId string        `xml:"OrganisationId"`
	Organisation   *Organisation `xml:"Organisation"`
}

// OrganisationList ...
type OrganisationList struct {
	IOFVersion       string              `xml:"IOFVersion"`
	OrganisationType []*OrganisationType `xml:"OrganisationType"`
	Organisation     []*Organisation     `xml:"Organisation"`
}

// OrganisationType ...
type OrganisationType struct {
	OrganisationTypeId  string                 `xml:"OrganisationTypeId"`
	Name                string                 `xml:"Name"`
	SubOrganisationType []*SubOrganisationType `xml:"SubOrganisationType"`
	ModifyDate          *ModifyDate            `xml:"ModifyDate"`
}

// OrganisationTypeId ...
type OrganisationTypeId struct {
	TypeAttr      string      `xml:"type,attr,omitempty"`
	IdManagerAttr interface{} `xml:"idManager,attr,omitempty"`
}

// Press ...
type Press struct {
	MediaTypeAttr   string             `xml:"mediaType,attr"`
	Name            string             `xml:"Name"`
	Contact         []*Contact         `xml:"Contact"`
	Address         []*Address         `xml:"Address"`
	Tele            []*Tele            `xml:"Tele"`
	Country         *Country           `xml:"Country"`
	CountryId       string             `xml:"CountryId"`
	ResultSelection []*ResultSelection `xml:"ResultSelection"`
	Press           string             `xml:"Press"`
}

// PressList ...
type PressList struct {
	IOFVersion string   `xml:"IOFVersion"`
	Press      []string `xml:"Press"`
}

// Service ...
type Service struct {
	ServiceId  string      `xml:"ServiceId"`
	Name       string      `xml:"Name"`
	Amount     *Amount     `xml:"Amount"`
	Comment    *Comment    `xml:"Comment"`
	MaxNumber  *MaxNumber  `xml:"MaxNumber"`
	ModifyDate *ModifyDate `xml:"ModifyDate"`
}

// ServiceId ...
type ServiceId string

// ServiceRequestList ...
type ServiceRequestList struct {
	IOFVersion                 string                        `xml:"IOFVersion"`
	ClubServiceRequest         []*ClubServiceRequest         `xml:"ClubServiceRequest"`
	OrganisationServiceRequest []*OrganisationServiceRequest `xml:"OrganisationServiceRequest"`
}

// ClubServiceRequest ...
type ClubServiceRequest struct {
	ClubId               string                  `xml:"ClubId"`
	Club                 *Club                   `xml:"Club"`
	ServiceRequest       []*ServiceRequest       `xml:"ServiceRequest"`
	PersonServiceRequest []*PersonServiceRequest `xml:"PersonServiceRequest"`
}

// OrganisationServiceRequest ...
type OrganisationServiceRequest struct {
	OrganisationId       string                  `xml:"OrganisationId"`
	Organisation         *Organisation           `xml:"Organisation"`
	ServiceRequest       []*ServiceRequest       `xml:"ServiceRequest"`
	PersonServiceRequest []*PersonServiceRequest `xml:"PersonServiceRequest"`
}

// PersonServiceRequest ...
type PersonServiceRequest struct {
	PersonId       string            `xml:"PersonId"`
	Person         string            `xml:"Person"`
	ServiceRequest []*ServiceRequest `xml:"ServiceRequest"`
}

// ServiceRequest ...
type ServiceRequest struct {
	ServiceId          string             `xml:"ServiceId"`
	Service            *Service           `xml:"Service"`
	ServiceOrderNumber string             `xml:"ServiceOrderNumber"`
	RequestedQuantity  *RequestedQuantity `xml:"RequestedQuantity"`
	DeliveredQuantity  *DeliveredQuantity `xml:"DeliveredQuantity"`
	Comment            *Comment           `xml:"Comment"`
	ModifyDate         *ModifyDate        `xml:"ModifyDate"`
}

// MaxNumber ...
type MaxNumber struct {
	UnitAttr interface{} `xml:"unit,attr,omitempty"`
}

// RequestedQuantity ...
type RequestedQuantity struct {
	UnitAttr interface{} `xml:"unit,attr,omitempty"`
}

// DeliveredQuantity ...
type DeliveredQuantity struct {
	UnitAttr interface{} `xml:"unit,attr,omitempty"`
}

// ServiceOrderNumber ...
type ServiceOrderNumber string

// Account ...
type Account struct {
	TypeAttr string `xml:"type,attr,omitempty"`
}

// Transaction ...
type Transaction struct {
	Account            string          `xml:"Account"`
	ForeignAccount     *ForeignAccount `xml:"ForeignAccount"`
	Date               *Date           `xml:"Date"`
	Amount             *Amount         `xml:"Amount"`
	ClubId             string          `xml:"ClubId"`
	Club               *Club           `xml:"Club"`
	OrganisationId     string          `xml:"OrganisationId"`
	Organisation       *Organisation   `xml:"Organisation"`
	PersonId           []string        `xml:"PersonId"`
	Person             []string        `xml:"Person"`
	EntryId            []string        `xml:"EntryId"`
	ServiceOrderNumber []string        `xml:"ServiceOrderNumber"`
	ServiceId          []string        `xml:"ServiceId"`
	Service            []*Service      `xml:"Service"`
	ModifyDate         *ModifyDate     `xml:"ModifyDate"`
}

// ForeignAccount ...
type ForeignAccount struct {
	Account string `xml:"Account"`
}

// TransactionList ...
type TransactionList struct {
	IOFVersion  string         `xml:"IOFVersion"`
	EventId     string         `xml:"EventId"`
	Event       string         `xml:"Event"`
	Transaction []*Transaction `xml:"Transaction"`
}

// Address ...
type Address struct {
	CareOfAttr  interface{} `xml:"careOf,attr,omitempty"`
	StreetAttr  interface{} `xml:"street,attr"`
	CityAttr    interface{} `xml:"city,attr"`
	ZipCodeAttr interface{} `xml:"zipCode,attr,omitempty"`
	AddressType string      `xml:"AddressType"`
	CountryId   string      `xml:"CountryId"`
	Country     *Country    `xml:"Country"`
	ModifyDate  *ModifyDate `xml:"ModifyDate"`
}

// AddressType ...
type AddressType struct {
	ValueAttr string `xml:"value,attr"`
}

// CountryList ...
type CountryList struct {
	IOFVersion string     `xml:"IOFVersion"`
	Country    []*Country `xml:"Country"`
}

// Country ...
type Country struct {
	CountryId  string      `xml:"CountryId"`
	Name       []string    `xml:"Name"`
	ModifyDate *ModifyDate `xml:"ModifyDate"`
}

// CountryId ...
type CountryId struct {
	ValueAttr string `xml:"value,attr"`
}

// Tele ...
type Tele struct {
	PhoneNumberAttr       interface{} `xml:"phoneNumber,attr,omitempty"`
	FaxNumberAttr         interface{} `xml:"faxNumber,attr,omitempty"`
	MobilePhoneNumberAttr interface{} `xml:"mobilePhoneNumber,attr,omitempty"`
	MailAddressAttr       interface{} `xml:"mailAddress,attr,omitempty"`
	TeleType              string      `xml:"TeleType"`
	ModifyDate            *ModifyDate `xml:"ModifyDate"`
}

// TeleType ...
type TeleType struct {
	ValueAttr string `xml:"value,attr"`
}

// WebURL ...
type WebURL string

// Date ...
type Date struct {
	DateFormatAttr interface{} `xml:"dateFormat,attr,omitempty"`
}

// Clock ...
type Clock struct {
	ClockFormatAttr interface{} `xml:"clockFormat,attr,omitempty"`
}

// StartTime ...
type StartTime struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// FinishTime ...
type FinishTime struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}

// Time ...
type Time struct {
	TimeFormatAttr interface{} `xml:"timeFormat,attr,omitempty"`
}

// ModifyDate ...
type ModifyDate struct {
	Date  *Date  `xml:"Date"`
	Clock *Clock `xml:"Clock"`
}
